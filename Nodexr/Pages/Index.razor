@page "/"
@page "/shared/{NodeTreeId?}"
@using Microsoft.FeatureManagement
@using Nodexr.Components.NodeTreeBrowser;
@inject IJSRuntime JSRuntime
@inject IModalService ModalService
@inject IFeatureManager FeatureManager;

<div id="mainpanels">
    <div style="
        background-color: hsl(218, 18%, 8%);
        box-shadow: 0px 4px 7px #00000033;
        z-index: 10;
        display: flex;">
        
        
        <OutputDisplay/>
        <div style="margin-left: auto;" class="top-row-link">
            <RegexOptionsDropdown/>
        </div>
       
        <a
            @onclick="ShowExpressionBrowser" @onclick:preventDefault @onclick:stopPropagation
            href=""
            target="_blank"
            class="top-row-link">
            Expression Browser
        </a>
        
        <a
            @onclick="ShowExpressionPublishWindow" @onclick:preventDefault @onclick:stopPropagation
            href=""
            target="_blank"
            class="top-row-link">
            Publish
        </a>
        
        <h3
            @onclick="ShowHelpInfo" @onclick:preventDefault @onclick:stopPropagation
            style="margin:7px; 
            display:inline-block; 
            cursor: help;
            font-size:20px;">
            Hjelp
        </h3>
        @NodeTreeId
        
    </div>

    <div style="display:flex; flex-direction:row; flex:1; min-height:0;">
        <NodeList />
        <NodeGraph NodeTreeId="@NodeTreeId" />
    </div>
</div>


@code {

    [Parameter]
    public string? NodeTreeId { get; set; }

    bool enableExpressionBrowser = true;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            JSRuntime.InvokeAsync<object>(
                "jsFunctions.blazorHasRendered");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        enableExpressionBrowser = await FeatureManager.IsEnabledAsync("ExpressionBrowser");
    }

    protected override bool ShouldRender() => false;

    protected void ShowHelpInfo(MouseEventArgs e)
    {
        ModalService.Show<HelpModal>("How To Use");
    }

    protected void ShowExpressionBrowser()
    {
        ModalService.Show<NodeTreeBrowser>("Expression Browser");
    }

    protected void ShowExpressionPublishWindow()
    {
        ModalService.Show<NodeTreePublishView>("Upload your Regex");
    }

    protected void Refresh()
    {
        StateHasChanged();
    }
}
